package DSLMachineLearning.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.descriptor.AbstractEditorBuilder;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cellLayout.CellLayout_Vertical;
import jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.impl.cellActions.CellAction_DeleteSmart;
import jetbrains.mps.openapi.editor.cells.DefaultSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SEmptyContainmentSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SChildSubstituteInfo;
import jetbrains.mps.openapi.editor.menus.transformation.SNodeLocation;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

/*package*/ class Document_EditorBuilder_a extends AbstractEditorBuilder {
  @NotNull
  private SNode myNode;

  public Document_EditorBuilder_a(@NotNull EditorContext context, @NotNull SNode node) {
    super(context);
    myNode = node;
  }

  @NotNull
  @Override
  public SNode getNode() {
    return myNode;
  }

  /*package*/ EditorCell createCell() {
    return createCollection_0();
  }

  private EditorCell createCollection_0() {
    EditorCell_Collection editorCell = new EditorCell_Collection(getEditorContext(), myNode, new CellLayout_Vertical());
    editorCell.setCellId("Collection_7wjwco_a");
    editorCell.setBig(true);
    setCellContext(editorCell);
    editorCell.addEditorCell(createRefNode_0());
    editorCell.addEditorCell(createRefNode_1());
    editorCell.addEditorCell(createRefNode_2());
    editorCell.addEditorCell(createRefNode_3());
    editorCell.addEditorCell(createRefNode_4());
    editorCell.addEditorCell(createRefNode_5());
    editorCell.addEditorCell(createRefNode_6());
    return editorCell;
  }
  private EditorCell createRefNode_0() {
    SingleRoleCellProvider provider = new modelnameSingleRoleHandler_7wjwco_a0(myNode, LINKS.modelname$3Z1i, getEditorContext());
    return provider.createCell();
  }
  private static class modelnameSingleRoleHandler_7wjwco_a0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modelnameSingleRoleHandler_7wjwco_a0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.modelname$3Z1i, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.modelname$3Z1i, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.modelname$3Z1i);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.modelname$3Z1i));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_modelname");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no modelname>";
    }
  }
  private EditorCell createRefNode_1() {
    SingleRoleCellProvider provider = new modelfamilySingleRoleHandler_7wjwco_b0(myNode, LINKS.modelfamily$44SF, getEditorContext());
    return provider.createCell();
  }
  private static class modelfamilySingleRoleHandler_7wjwco_b0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modelfamilySingleRoleHandler_7wjwco_b0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.modelfamily$44SF, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.modelfamily$44SF, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.modelfamily$44SF);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.modelfamily$44SF));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_modelfamily");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no modelfamily>";
    }
  }
  private EditorCell createRefNode_2() {
    SingleRoleCellProvider provider = new modeltypeSingleRoleHandler_7wjwco_c0(myNode, LINKS.modeltype$owpy, getEditorContext());
    return provider.createCell();
  }
  private static class modeltypeSingleRoleHandler_7wjwco_c0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modeltypeSingleRoleHandler_7wjwco_c0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.modeltype$owpy, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.modeltype$owpy, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.modeltype$owpy);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.modeltype$owpy));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_modeltype");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no modeltype>";
    }
  }
  private EditorCell createRefNode_3() {
    SingleRoleCellProvider provider = new modeldescriptionSingleRoleHandler_7wjwco_d0(myNode, LINKS.modeldescription$45OJ, getEditorContext());
    return provider.createCell();
  }
  private static class modeldescriptionSingleRoleHandler_7wjwco_d0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modeldescriptionSingleRoleHandler_7wjwco_d0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.modeldescription$45OJ, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.modeldescription$45OJ, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.modeldescription$45OJ);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.modeldescription$45OJ));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_modeldescription");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no modeldescription>";
    }
  }
  private EditorCell createRefNode_4() {
    SingleRoleCellProvider provider = new inputsSingleRoleHandler_7wjwco_e0(myNode, LINKS.inputs$4bV9, getEditorContext());
    return provider.createCell();
  }
  private static class inputsSingleRoleHandler_7wjwco_e0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public inputsSingleRoleHandler_7wjwco_e0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.inputs$4bV9, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.inputs$4bV9, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.inputs$4bV9);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.inputs$4bV9));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_inputs");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no inputs>";
    }
  }
  private EditorCell createRefNode_5() {
    SingleRoleCellProvider provider = new outputsSingleRoleHandler_7wjwco_f0(myNode, LINKS.outputs$4dlf, getEditorContext());
    return provider.createCell();
  }
  private static class outputsSingleRoleHandler_7wjwco_f0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public outputsSingleRoleHandler_7wjwco_f0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.outputs$4dlf, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.outputs$4dlf, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.outputs$4dlf);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.outputs$4dlf));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_outputs");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no outputs>";
    }
  }
  private EditorCell createRefNode_6() {
    SingleRoleCellProvider provider = new modelSingleRoleHandler_7wjwco_g0(myNode, LINKS.model$4jEE, getEditorContext());
    return provider.createCell();
  }
  private static class modelSingleRoleHandler_7wjwco_g0 extends SingleRoleCellProvider {
    @NotNull
    private SNode myNode;

    public modelSingleRoleHandler_7wjwco_g0(SNode ownerNode, SContainmentLink containmentLink, EditorContext context) {
      super(containmentLink, context);
      myNode = ownerNode;
    }

    @Override
    @NotNull
    public SNode getNode() {
      return myNode;
    }

    protected EditorCell createChildCell(SNode child) {
      EditorCell editorCell = getUpdateSession().updateChildNodeCell(child);
      editorCell.setAction(CellActionType.DELETE, new CellAction_DeleteSmart(getNode(), LINKS.model$4jEE, child));
      editorCell.setAction(CellActionType.BACKSPACE, new CellAction_DeleteSmart(getNode(), LINKS.model$4jEE, child));
      installCellInfo(child, editorCell, false);
      return editorCell;
    }



    private void installCellInfo(SNode child, EditorCell editorCell, boolean isEmpty) {
      if (editorCell.getSubstituteInfo() == null || editorCell.getSubstituteInfo() instanceof DefaultSubstituteInfo) {
        editorCell.setSubstituteInfo((isEmpty ? new SEmptyContainmentSubstituteInfo(editorCell) : new SChildSubstituteInfo(editorCell)));
      }
      if (editorCell.getSRole() == null) {
        editorCell.setSRole(LINKS.model$4jEE);
      }
    }
    @Override
    protected EditorCell createEmptyCell() {
      getCellFactory().pushCellContext();
      getCellFactory().setNodeLocation(new SNodeLocation.FromParentAndLink(getNode(), LINKS.model$4jEE));
      try {
        EditorCell editorCell = super.createEmptyCell();
        editorCell.setCellId("empty_model");
        installCellInfo(null, editorCell, true);
        setCellContext(editorCell);
        return editorCell;
      } finally {
        getCellFactory().popCellContext();
      }
    }
    protected String getNoTargetText() {
      return "<no model>";
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink modelname$3Z1i = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333ae0L, "modelname");
    /*package*/ static final SContainmentLink modelfamily$44SF = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333ae4L, "modelfamily");
    /*package*/ static final SContainmentLink modeltype$owpy = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333c04L, "modeltype");
    /*package*/ static final SContainmentLink modeldescription$45OJ = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333ae8L, "modeldescription");
    /*package*/ static final SContainmentLink inputs$4bV9 = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333aedL, "inputs");
    /*package*/ static final SContainmentLink outputs$4dlf = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333af3L, "outputs");
    /*package*/ static final SContainmentLink model$4jEE = MetaAdapterFactory.getContainmentLink(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L, 0x4c851a0d9d333af9L, "model");
  }
}
