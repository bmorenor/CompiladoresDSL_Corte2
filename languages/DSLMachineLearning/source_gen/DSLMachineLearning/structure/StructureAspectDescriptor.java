package DSLMachineLearning.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDocument = createDescriptorForDocument();
  /*package*/ final ConceptDescriptor myConceptInput = createDescriptorForInput();
  /*package*/ final ConceptDescriptor myConceptInputList = createDescriptorForInputList();
  /*package*/ final ConceptDescriptor myConceptInputName = createDescriptorForInputName();
  /*package*/ final ConceptDescriptor myConceptInputType = createDescriptorForInputType();
  /*package*/ final ConceptDescriptor myConceptInputTypeName = createDescriptorForInputTypeName();
  /*package*/ final ConceptDescriptor myConceptInputs = createDescriptorForInputs();
  /*package*/ final ConceptDescriptor myConceptLayer = createDescriptorForLayer();
  /*package*/ final ConceptDescriptor myConceptLayerList = createDescriptorForLayerList();
  /*package*/ final ConceptDescriptor myConceptLayerName = createDescriptorForLayerName();
  /*package*/ final ConceptDescriptor myConceptLayerParams = createDescriptorForLayerParams();
  /*package*/ final ConceptDescriptor myConceptLayers = createDescriptorForLayers();
  /*package*/ final ConceptDescriptor myConceptModel = createDescriptorForModel();
  /*package*/ final ConceptDescriptor myConceptModelDescription = createDescriptorForModelDescription();
  /*package*/ final ConceptDescriptor myConceptModelFamily = createDescriptorForModelFamily();
  /*package*/ final ConceptDescriptor myConceptModelFamilyName = createDescriptorForModelFamilyName();
  /*package*/ final ConceptDescriptor myConceptModelName = createDescriptorForModelName();
  /*package*/ final ConceptDescriptor myConceptModelType = createDescriptorForModelType();
  /*package*/ final ConceptDescriptor myConceptModelTypeName = createDescriptorForModelTypeName();
  /*package*/ final ConceptDescriptor myConceptNumber = createDescriptorForNumber();
  /*package*/ final ConceptDescriptor myConceptNumberList = createDescriptorForNumberList();
  /*package*/ final ConceptDescriptor myConceptOutput = createDescriptorForOutput();
  /*package*/ final ConceptDescriptor myConceptOutputList = createDescriptorForOutputList();
  /*package*/ final ConceptDescriptor myConceptOutputName = createDescriptorForOutputName();
  /*package*/ final ConceptDescriptor myConceptOutputType = createDescriptorForOutputType();
  /*package*/ final ConceptDescriptor myConceptOutputTypeName = createDescriptorForOutputTypeName();
  /*package*/ final ConceptDescriptor myConceptOutputs = createDescriptorForOutputs();
  /*package*/ final EnumerationDescriptor myEnumerationEnumInputTypeName = new EnumerationDescriptor_EnumInputTypeName();
  /*package*/ final EnumerationDescriptor myEnumerationEnumModelFamilyName = new EnumerationDescriptor_EnumModelFamilyName();
  /*package*/ final EnumerationDescriptor myEnumerationEnumModelTypeName = new EnumerationDescriptor_EnumModelTypeName();
  /*package*/ final EnumerationDescriptor myEnumerationEnumOutputTypeName = new EnumerationDescriptor_EnumOutputTypeName();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDocument, myConceptInput, myConceptInputList, myConceptInputName, myConceptInputType, myConceptInputTypeName, myConceptInputs, myConceptLayer, myConceptLayerList, myConceptLayerName, myConceptLayerParams, myConceptLayers, myConceptModel, myConceptModelDescription, myConceptModelFamily, myConceptModelFamilyName, myConceptModelName, myConceptModelType, myConceptModelTypeName, myConceptNumber, myConceptNumberList, myConceptOutput, myConceptOutputList, myConceptOutputName, myConceptOutputType, myConceptOutputTypeName, myConceptOutputs);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Document:
        return myConceptDocument;
      case LanguageConceptSwitch.Input:
        return myConceptInput;
      case LanguageConceptSwitch.InputList:
        return myConceptInputList;
      case LanguageConceptSwitch.InputName:
        return myConceptInputName;
      case LanguageConceptSwitch.InputType:
        return myConceptInputType;
      case LanguageConceptSwitch.InputTypeName:
        return myConceptInputTypeName;
      case LanguageConceptSwitch.Inputs:
        return myConceptInputs;
      case LanguageConceptSwitch.Layer:
        return myConceptLayer;
      case LanguageConceptSwitch.LayerList:
        return myConceptLayerList;
      case LanguageConceptSwitch.LayerName:
        return myConceptLayerName;
      case LanguageConceptSwitch.LayerParams:
        return myConceptLayerParams;
      case LanguageConceptSwitch.Layers:
        return myConceptLayers;
      case LanguageConceptSwitch.Model:
        return myConceptModel;
      case LanguageConceptSwitch.ModelDescription:
        return myConceptModelDescription;
      case LanguageConceptSwitch.ModelFamily:
        return myConceptModelFamily;
      case LanguageConceptSwitch.ModelFamilyName:
        return myConceptModelFamilyName;
      case LanguageConceptSwitch.ModelName:
        return myConceptModelName;
      case LanguageConceptSwitch.ModelType:
        return myConceptModelType;
      case LanguageConceptSwitch.ModelTypeName:
        return myConceptModelTypeName;
      case LanguageConceptSwitch.Number:
        return myConceptNumber;
      case LanguageConceptSwitch.NumberList:
        return myConceptNumberList;
      case LanguageConceptSwitch.Output:
        return myConceptOutput;
      case LanguageConceptSwitch.OutputList:
        return myConceptOutputList;
      case LanguageConceptSwitch.OutputName:
        return myConceptOutputName;
      case LanguageConceptSwitch.OutputType:
        return myConceptOutputType;
      case LanguageConceptSwitch.OutputTypeName:
        return myConceptOutputTypeName;
      case LanguageConceptSwitch.Outputs:
        return myConceptOutputs;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationEnumInputTypeName, myEnumerationEnumModelFamilyName, myEnumerationEnumModelTypeName, myEnumerationEnumOutputTypeName);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForDocument() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Document", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d3322d0L);
    b.class_(false, false, true);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559311568");
    b.version(3);
    b.aggregate("modelname", 0x4c851a0d9d333ae0L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b0fL).optional(false).ordered(true).multiple(false).origin("5513841964559317728").done();
    b.aggregate("modelfamily", 0x4c851a0d9d333ae4L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b12L).optional(false).ordered(true).multiple(false).origin("5513841964559317732").done();
    b.aggregate("modeltype", 0x4c851a0d9d333c04L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b22L).optional(true).ordered(true).multiple(false).origin("5513841964559318020").done();
    b.aggregate("modeldescription", 0x4c851a0d9d333ae8L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b26L).optional(true).ordered(true).multiple(false).origin("5513841964559317736").done();
    b.aggregate("inputs", 0x4c851a0d9d333aedL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b27L).optional(false).ordered(true).multiple(false).origin("5513841964559317741").done();
    b.aggregate("outputs", 0x4c851a0d9d333af3L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b4bL).optional(false).ordered(true).multiple(false).origin("5513841964559317747").done();
    b.aggregate("model", 0x4c851a0d9d333af9L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b6aL).optional(false).ordered(true).multiple(false).origin("5513841964559317753").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Input", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b3aL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317818");
    b.version(3);
    b.aggregate("inputname", 0x4c851a0d9d333b3cL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b43L).optional(true).ordered(true).multiple(false).origin("5513841964559317820").done();
    b.aggregate("inputtype", 0x4c851a0d9d333b3fL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b44L).optional(true).ordered(true).multiple(false).origin("5513841964559317823").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "InputList", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b2aL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317802");
    b.version(3);
    b.aggregate("input", 0x4c851a0d9d333b2bL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b3aL).optional(false).ordered(true).multiple(true).origin("5513841964559317803").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "InputName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b43L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317827");
    b.version(3);
    b.property("freetext", 0x4c851a0d9d333b8cL).type(PrimitiveTypeId.STRING).origin("5513841964559317900").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "InputType", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b44L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317828");
    b.version(3);
    b.aggregate("inputtypename", 0x4c851a0d9d333b46L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b49L).optional(false).ordered(true).multiple(false).origin("5513841964559317830").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputTypeName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "InputTypeName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b49L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317833");
    b.version(3);
    b.property("inputTypeName", 0x3e000331b472778dL).type(MetaIdFactory.dataTypeId(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333bcbL)).origin("4467574342367213453").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForInputs() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Inputs", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b27L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317799");
    b.version(3);
    b.aggregate("inputslist", 0x4c851a0d9d333b28L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b2aL).optional(false).ordered(true).multiple(false).origin("5513841964559317800").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Layer", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b70L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317872");
    b.version(3);
    b.aggregate("layername", 0x4c851a0d9d333b71L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b70L).optional(false).ordered(true).multiple(false).origin("5513841964559317873").done();
    b.aggregate("layerparams", 0x4c851a0d9d333b73L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b70L).optional(false).ordered(true).multiple(false).origin("5513841964559317875").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayerList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "LayerList", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b6dL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317869");
    b.version(3);
    b.aggregate("layers", 0x4c851a0d9d333b6eL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b76L).optional(false).ordered(true).multiple(true).origin("5513841964559317870").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayerName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "LayerName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b7bL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317883");
    b.version(3);
    b.property("freetext", 0x4c851a0d9d333b98L).type(PrimitiveTypeId.STRING).origin("5513841964559317912").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayerParams() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "LayerParams", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b7cL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317884");
    b.version(3);
    b.aggregate("numerlist", 0x4c851a0d9d333b7dL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b79L).optional(false).ordered(true).multiple(false).origin("5513841964559317885").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLayers() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Layers", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b76L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317878");
    b.version(3);
    b.aggregate("layer", 0x4c851a0d9d333b77L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b70L).optional(false).ordered(true).multiple(false).origin("5513841964559317879").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Model", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b6aL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317866");
    b.version(3);
    b.aggregate("layerlist", 0x4c851a0d9d333b6bL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b6dL).optional(false).ordered(true).multiple(false).origin("5513841964559317867").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelDescription() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelDescription", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b26L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317798");
    b.version(3);
    b.property("freetext", 0x4c851a0d9d333b8fL).type(PrimitiveTypeId.STRING).origin("5513841964559317903").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelFamily() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelFamily", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b12L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317778");
    b.version(3);
    b.aggregate("modelfamilyname", 0x4c851a0d9d333b20L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x3e000331b47276c0L).optional(false).ordered(true).multiple(false).origin("5513841964559317792").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelFamilyName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelFamilyName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x3e000331b47276c0L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/4467574342367213248");
    b.version(3);
    b.property("modelFamilyName", 0x3e000331b47276c5L).type(MetaIdFactory.dataTypeId(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b9bL)).origin("4467574342367213253").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b0fL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317775");
    b.version(3);
    b.property("freetext", 0x4c851a0d9d333b92L).type(PrimitiveTypeId.STRING).origin("5513841964559317906").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelType", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b22L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317794");
    b.version(3);
    b.aggregate("modeltypename", 0x4c851a0d9d333b23L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b22L).optional(true).ordered(true).multiple(false).origin("5513841964559317795").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForModelTypeName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "ModelTypeName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b25L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317797");
    b.version(3);
    b.property("modelTypeName", 0x3e000331b47276c2L).type(MetaIdFactory.dataTypeId(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333baaL)).origin("4467574342367213250").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumber() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Number", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b84L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317892");
    b.version(3);
    b.property("number", 0x4c851a0d9d333b86L).type(PrimitiveTypeId.INTEGER).origin("5513841964559317894").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumberList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "NumberList", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b79L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317881");
    b.version(3);
    b.aggregate("number", 0x4c851a0d9d333b82L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b84L).optional(false).ordered(true).multiple(true).origin("5513841964559317890").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutput() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Output", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b5fL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317855");
    b.version(3);
    b.aggregate("outputname", 0x4c851a0d9d333b60L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b5fL).optional(false).ordered(true).multiple(false).origin("5513841964559317856").done();
    b.aggregate("outputtype", 0x4c851a0d9d333b62L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b66L).optional(false).ordered(true).multiple(false).origin("5513841964559317858").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "OutputList", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b5cL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317852");
    b.version(3);
    b.aggregate("output", 0x4c851a0d9d333b5dL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b5fL).optional(false).ordered(true).multiple(true).origin("5513841964559317853").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "OutputName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b65L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317861");
    b.version(3);
    b.property("freetext", 0x4c851a0d9d333b95L).type(PrimitiveTypeId.STRING).origin("5513841964559317909").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "OutputType", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b66L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317862");
    b.version(3);
    b.aggregate("ouputtypename", 0x4c851a0d9d333b67L).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b69L).optional(false).ordered(true).multiple(false).origin("5513841964559317863").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputTypeName() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "OutputTypeName", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b69L);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317865");
    b.version(3);
    b.property("outputTypeName", 0x3e000331b4733dd9L).type(MetaIdFactory.dataTypeId(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333bd8L)).origin("4467574342367264217").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOutputs() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("DSLMachineLearning", "Outputs", 0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b4bL);
    b.class_(false, false, false);
    b.origin("r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317835");
    b.version(3);
    b.aggregate("outputlist", 0x4c851a0d9d333b4cL).target(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333b5cL).optional(false).ordered(true).multiple(true).origin("5513841964559317836").done();
    return b.create();
  }
}
