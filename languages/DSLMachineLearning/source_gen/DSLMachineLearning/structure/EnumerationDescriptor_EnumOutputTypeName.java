package DSLMachineLearning.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_EnumOutputTypeName extends EnumerationDescriptorBase {

  public EnumerationDescriptor_EnumOutputTypeName() {
    super(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333bd8L, "EnumOutputTypeName", "r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317976");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_number_0 = new EnumerationDescriptor.MemberDescriptor("number", "NUMBER ", 0x4c851a0d9d333bd9L, "r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317977");
  private final EnumerationDescriptor.MemberDescriptor myMember_categorical_0 = new EnumerationDescriptor.MemberDescriptor("categorical", "CATEGORICAL ", 0x4c851a0d9d333bdbL, "r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317979");
  private final EnumerationDescriptor.MemberDescriptor myMember_binary_0 = new EnumerationDescriptor.MemberDescriptor("binary", "BINARY", 0x4c851a0d9d333bdfL, "r:39ccb51b-8655-43ec-9c8e-61b9dee4ce72(DSLMachineLearning.structure)/5513841964559317983");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0xc443d583ed614d79L, 0xbf612b6fba21dfcaL, 0x4c851a0d9d333bd8L, 0x4c851a0d9d333bd9L, 0x4c851a0d9d333bdbL, 0x4c851a0d9d333bdfL);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_number_0, myMember_categorical_0, myMember_binary_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return myMember_number_0;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "number":
        return myMember_number_0;
      case "categorical":
        return myMember_categorical_0;
      case "binary":
        return myMember_binary_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
